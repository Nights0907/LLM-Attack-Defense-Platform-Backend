import copy
import csv, json, re
import os

from app import mongo
from app.models import AttackParameter


# read the harmful behaviors dataset
def data_reader(data_path):
    with open(data_path, 'r') as f:
        reader = csv.reader(f)
        next(reader)
        goals = []
        for row in reader:
            goal = row[0]
            goals.append(goal)
    return goals

# read the jailbroken data generated by ReNeLLM, or the responses generated by llms
def jailbroken_data_reader(data_path):
    with open(data_path, 'r') as f:
        data = json.load(f)
    return data

# preprocess the shorten sentences candidates generated by gpt-3.5-turbo
def remove_number_prefix(sentence):
    return re.sub(r'^\d+\.\s*', '', sentence)

def save_generation(date_time:str,attack_parameter: AttackParameter, results):

    # 存储所有结果
    temp_result = {}

    temp_result['username'] = "zsx"
    temp_result['attack_method'] = attack_parameter.attack_method
    temp_result['attack_model'] = attack_parameter.attack_model
    temp_result['judge_model'] = attack_parameter.attack_model

    if attack_parameter.prompt is None:
        temp_result['attack_dataset'] = os.path.splitext(os.path.basename(attack_parameter.malicious_question_set))[0]
    else:
        temp_result['attack_question'] = attack_parameter.prompt
    temp_result['date'] = date_time
    temp_result['attack_id'] = re.sub(r'\D', '', date_time)
    temp_result['results'] = results

    # deepcopy
    return_data = copy.deepcopy(temp_result)

    # mongo
    attack_results_collection = mongo.db.attack_results
    attack_results_collection.insert_one(temp_result)

    return return_data